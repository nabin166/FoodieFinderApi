// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fooddelivery.Model;

#nullable disable

namespace fooddelivery.Migrations
{
    [DbContext(typeof(foodcontext))]
    [Migration("20240104171028_ye")]
    partial class ye
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("fooddelivery.Model.Categories", b =>
                {
                    b.Property<int>("Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Category_Id"), 1L, 1);

                    b.Property<string>("Category_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Category_Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("fooddelivery.Model.CustomerOrders", b =>
                {
                    b.Property<int?>("CustomerOrders_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CustomerOrders_Id"), 1L, 1);

                    b.Property<int?>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Order_Id")
                        .HasColumnType("int");

                    b.HasKey("CustomerOrders_Id");

                    b.HasIndex("Customer_Id");

                    b.HasIndex("Order_Id");

                    b.ToTable("CustomerOrders");
                });

            modelBuilder.Entity("fooddelivery.Model.Customers", b =>
                {
                    b.Property<int>("Customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Customer_Id"), 1L, 1);

                    b.Property<bool?>("Available")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Role_Id")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Customer_Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("fooddelivery.Model.Deliveries", b =>
                {
                    b.Property<int>("Delivery_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Delivery_Id"), 1L, 1);

                    b.Property<int?>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<int>("DeliveryStatus")
                        .HasColumnType("int");

                    b.Property<string>("Deliverylocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinalOrder_Id")
                        .HasColumnType("int");

                    b.HasKey("Delivery_Id");

                    b.HasIndex("Customer_Id");

                    b.HasIndex("FinalOrder_Id");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("fooddelivery.Model.FinalOrders", b =>
                {
                    b.Property<int>("FinalOrder_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinalOrder_Id"), 1L, 1);

                    b.Property<int?>("Deliver_Location")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("FinalOrder_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("FinalOrder_Id");

                    b.ToTable("FinalOrders");
                });

            modelBuilder.Entity("fooddelivery.Model.Fooditems", b =>
                {
                    b.Property<int>("Fooditem_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Fooditem_id"), 1L, 1);

                    b.Property<int?>("Category_Id")
                        .HasColumnType("int");

                    b.Property<string>("Fooditem_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Fooditem_Price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Fooditem_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fooditem_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Resturant_Id")
                        .HasColumnType("int");

                    b.HasKey("Fooditem_id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("Resturant_Id");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("fooddelivery.Model.Orders", b =>
                {
                    b.Property<int>("Order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("FinalOrder_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Fooditem_Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Order_Payment")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Order_Quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order_Status")
                        .HasColumnType("int");

                    b.HasKey("Order_Id");

                    b.HasIndex("FinalOrder_ID");

                    b.HasIndex("Fooditem_Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("fooddelivery.Model.Resturants", b =>
                {
                    b.Property<int>("Resturant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Resturant_Id"), 1L, 1);

                    b.Property<int?>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<string>("Resturant_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resturant_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Resturant_Id");

                    b.HasIndex("Customer_Id");

                    b.ToTable("Resturants");
                });

            modelBuilder.Entity("fooddelivery.Model.Roles", b =>
                {
                    b.Property<int>("Role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_Id"), 1L, 1);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Role_Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Role_Id = 1,
                            Role = "Restaurant"
                        },
                        new
                        {
                            Role_Id = 2,
                            Role = "User"
                        },
                        new
                        {
                            Role_Id = 3,
                            Role = "Delivery"
                        });
                });

            modelBuilder.Entity("fooddelivery.Model.CustomerOrders", b =>
                {
                    b.HasOne("fooddelivery.Model.Customers", "Customer")
                        .WithMany("customerOrders")
                        .HasForeignKey("Customer_Id");

                    b.HasOne("fooddelivery.Model.Orders", "Order")
                        .WithMany("customerOrders")
                        .HasForeignKey("Order_Id");

                    b.Navigation("Customer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("fooddelivery.Model.Customers", b =>
                {
                    b.HasOne("fooddelivery.Model.Roles", "Role")
                        .WithMany("customers")
                        .HasForeignKey("Role_Id");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("fooddelivery.Model.Deliveries", b =>
                {
                    b.HasOne("fooddelivery.Model.Customers", "Customers")
                        .WithMany("deliveries")
                        .HasForeignKey("Customer_Id");

                    b.HasOne("fooddelivery.Model.FinalOrders", "FinalOrder")
                        .WithMany("deliveries")
                        .HasForeignKey("FinalOrder_Id");

                    b.Navigation("Customers");

                    b.Navigation("FinalOrder");
                });

            modelBuilder.Entity("fooddelivery.Model.Fooditems", b =>
                {
                    b.HasOne("fooddelivery.Model.Categories", "Category")
                        .WithMany("fooditems")
                        .HasForeignKey("Category_Id");

                    b.HasOne("fooddelivery.Model.Resturants", "Resturant")
                        .WithMany("fooditems")
                        .HasForeignKey("Resturant_Id");

                    b.Navigation("Category");

                    b.Navigation("Resturant");
                });

            modelBuilder.Entity("fooddelivery.Model.Orders", b =>
                {
                    b.HasOne("fooddelivery.Model.FinalOrders", "FinalOrder")
                        .WithMany("orders")
                        .HasForeignKey("FinalOrder_ID");

                    b.HasOne("fooddelivery.Model.Fooditems", "Fooditem")
                        .WithMany("orders")
                        .HasForeignKey("Fooditem_Id");

                    b.Navigation("FinalOrder");

                    b.Navigation("Fooditem");
                });

            modelBuilder.Entity("fooddelivery.Model.Resturants", b =>
                {
                    b.HasOne("fooddelivery.Model.Customers", "Customer")
                        .WithMany("resturants")
                        .HasForeignKey("Customer_Id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("fooddelivery.Model.Categories", b =>
                {
                    b.Navigation("fooditems");
                });

            modelBuilder.Entity("fooddelivery.Model.Customers", b =>
                {
                    b.Navigation("customerOrders");

                    b.Navigation("deliveries");

                    b.Navigation("resturants");
                });

            modelBuilder.Entity("fooddelivery.Model.FinalOrders", b =>
                {
                    b.Navigation("deliveries");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("fooddelivery.Model.Fooditems", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("fooddelivery.Model.Orders", b =>
                {
                    b.Navigation("customerOrders");
                });

            modelBuilder.Entity("fooddelivery.Model.Resturants", b =>
                {
                    b.Navigation("fooditems");
                });

            modelBuilder.Entity("fooddelivery.Model.Roles", b =>
                {
                    b.Navigation("customers");
                });
#pragma warning restore 612, 618
        }
    }
}
